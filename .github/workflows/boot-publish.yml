name: Build and Deploy Boot

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      # 版本管理
      PROJECT_NAME: 'cloud-disks'
      PRO_VERSION: '1.0.0-SNAPSHOT'

      # 容器镜像
      ALIYUN_CR_REGISTORY: 'registry.cn-heyuan.aliyuncs.com'
      ALIYUN_CR_NAMESPACE: 'carrocean'

      APPLICATION_YML_URL: 'cloud-disks-boot/src/main/resources/application.yml'
      SERVER_PORT: '30001'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Configure Database Connection
        env:
          DB_URL: ${{ secrets.DB_URL_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
        run: |
          sed -i 's/localhost/'"$DB_URL_PORT"'/g' ${{ APPLICATION_YML_URL }}
          sed -i 's/root/'"$DB_USER"'/g' ${{ APPLICATION_YML_URL }}
          sed -i 's/123456/'"$DB_PASS"'/g' ${{ APPLICATION_YML_URL }}

      - name: Build SpringBoot application
        run: |
          mvn clean package -DskipTests

      - name: Build Docker images
        run: |
          docker build -t ${{env.PROJECT_NAME}}:${{env.PRO_VERSION}} .

      - name: Login to Aliyun Container Registry
        uses: aliyun/acr-login@v1
        with:
          login-server: ${{ env.ALIYUN_CR_REGISTORY }}
          region-id: cn-heyuan
          username: "${{ secrets.ALIYUN_REGISTRY_USER }}"
          password: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"

      - name: Tag and push SpringBoot image to Aliyun
        run: |
          docker tag ${{env.PROJECT_NAME}}:${{env.PRO_VERSION}} ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}
          docker push ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}

      - name: Deploy to Aliyun ECS
        run: |
          sshpass -p ${{ secrets.ALIYUN_ECS_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{secrets.ALIYUN_ECS_USER}}@${{secrets.ALIYUN_ECS_HOST}} << EOF
            docker stop ${{env.PROJECT_NAME}} || true
            docker rm ${{env.PROJECT_NAME}} || true
            docker rmi ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}} || true
            docker pull ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}
            docker run --name ${{env.PROJECT_NAME}} -d -p ${{ env.SERVER_PORT }}:${{ env.SERVER_PORT }} ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}
          EOF
