name: Build and Deploy Boot

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      # 版本管理
      PROJECT_NAME: 'cloud-disks'
      PRO_VERSION: '1.0.0-SNAPSHOT'

      # 容器镜像
      ALIYUN_CR_REGISTORY: 'registry.cn-shenzhen.aliyuncs.com'
      ALIYUN_CR_NAMESPACE: 'carrocean'

      SERVER_PORT: '30001'

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}

      - name: Build SpringBoot application
        run: |
          mvn clean package -DskipTests

      - name: Login to Aliyun Container Registry
        run: |
          echo ${{ secrets.ALIYUN_REGISTRY_PASSWORD }} | docker login --username ${{ secrets.ALIYUN_REGISTRY_USER }} --password-stdin ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}

      - name: Tag and push SpringBoot image to Aliyun
        run: |
          docker build -t ${{env.PROJECT_NAME}}:${{env.PRO_VERSION}} .
          docker tag ${{env.PROJECT_NAME}}:${{env.PRO_VERSION}} ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}
          docker push ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}

      - name: Deploy to Aliyun ECS
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          sshpass -p ${DEPLOY_PASSWORD} -o StrictHostKeyChecking=no ${{secrets.ALIYUN_ECS_USER}}@${{secrets.ALIYUN_ECS_HOST}} << EOF
            echo ${{ secrets.ALIYUN_REGISTRY_PASSWORD }} | docker login --username ${{ secrets.ALIYUN_REGISTRY_USER }} --password-stdin ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}
            docker pull ${{ env.ALIYUN_CR_REGISTORY }}/${{env.ALIYUN_CR_NAMESPACE}}/${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}
            docker stop ${{env.PROJECT_NAME}}:${{env.PRO_VERSION}} || true
            docker rm ${{env.PROJECT_NAME}}:${{env.PRO_VERSION}} || true
            docker run --name ${{env.PROJECT_NAME}} -d -p ${{ env.SERVER_PORT }}:${{ env.SERVER_PORT }} ${{env.PROJECT_NAME}}:${{env.PRO_VERSION}}
          EOF
