name: Build and Deploy UI

on:
  push:
    branches:
      - main
  # 你可以根据需要添加其他触发条件

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Node.js for Vue
        uses: actions/setup-node@v3
        with:
          node-version: '20.12.2'

      - name: Install Vue dependencies and build
        run: |
          cd frontend # 前端Vue项目的目录，根据实际情况调整
          npm install
          npm run build
        env:
          CI: true

      - name: Set up Java for SpringBoot
        uses: actions/setup-java@v3
        with:
          java-version: '11' # 根据项目需求设置 Java 版本

      - name: Build SpringBoot application
        run: |
          cd backend # 后端SpringBoot项目的目录，根据实际情况调整
          mvn clean package -DskipTests

      - name: Build Docker images
        run: |
          docker build -t vue-springboot-app -f Dockerfile . # 确保 Dockerfile 在仓库根目录

      - name: Login to Aliyun Container Registry
        run: |
          echo ${{ secrets.ALIYUN_REGISTRY_PASSWORD }} | docker login --username ${{ secrets.ALIYUN_REGISTRY_USER }} --password-stdin ${{ secrets.ALIYUN_REGISTRY }}

      - name: Tag and push Vue image to Aliyun
        run: |
          docker tag vue-springboot-app:latest ${{ secrets.ALIYUN_REGISTRY }}/your-vue-repo:tag
          docker push ${{ secrets.ALIYUN_REGISTRY }}/your-vue-repo:tag

      - name: Tag and push SpringBoot image to Aliyun
        run: |
          # 假设 SpringBoot 应用已经构建为一个单独的 Docker 镜像
          docker tag springboot-app:latest ${{ secrets.ALIYUN_REGISTRY }}/your-springboot-repo:tag
          docker push ${{ secrets.ALIYUN_REGISTRY }}/your-springboot-repo:tag

      - name: Deploy to Aliyun ECS
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ${DEPLOY_KEY} your-deploy-user@your-aliyun-ecs-ip << EOF
            # 拉取镜像和部署的命令
            docker pull ${{ secrets.ALIYUN_REGISTRY }}/your-vue-repo:tag
            docker pull ${{ secrets.ALIYUN_REGISTRY }}/your-springboot-repo:tag
            docker stop your-vue-container || true
            docker rm your-vue-container || true
            docker run --name your-vue-container -d -p your-vue-port:80 ${{ secrets.ALIYUN_REGISTRY }}/your-vue-repo:tag
            docker stop your-springboot-container || true
            docker rm your-springboot-container || true
            docker run --name your-springboot-container -d -p your-springboot-port:8080 ${{ secrets.ALIYUN_REGISTRY }}/your-springboot-repo:tag
          EOF
